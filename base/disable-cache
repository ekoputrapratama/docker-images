#!/bin/bash
set -e

# Make sure only root can run our script
if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root" 1>&2
   exit 1
fi

if [ -f /etc/os-release ]; then
    # freedesktop.org and systemd
    . /etc/os-release
    DISTRO=$NAME
    VER=$VERSION_ID
elif type lsb_release >/dev/null 2>&1; then
    # linuxbase.org
    DISTRO=$(lsb_release -si)
    VER=$(lsb_release -sr)
elif [ -f /etc/lsb-release ]; then
    # For some versions of Debian/Ubuntu without lsb_release command
    . /etc/lsb-release
    DISTRO=$DISTRIB_ID
    VER=$DISTRIB_RELEASE
elif [ -f /etc/debian_version ]; then
    # Older Debian/Ubuntu/etc.
    DISTRO=Debian
    VER=$(cat /etc/debian_version)
elif [ -f /etc/SuSe-release ]; then
    # Older SuSE/etc.
    DISTRO=unknown
elif [ -f /etc/redhat-release ]; then
    # Older Red Hat, CentOS, etc.
    DISTRO=unknown
else
    # Fall back to uname, e.g. "Linux <version>", also works for BSD, etc.
    DISTRO=$(uname -s)
    VER=$(uname -r)
fi


case "${DISTRO}" in 
  "Manjaro Linux"|"archlinux"|"Arch Linux"|"arch"|"Arch"|"archarm")
    echo "Distro detected as archlinux or archlinux based distro, configuring package manager ..."
    # comment pacman cache directory
    sed -r -i 's/CacheDir\ =.*$/#CacheDir\ =\ \/tmp\/pacman/g' /etc/pacman.conf
    # remove XDG_CACHE_HOME environment variable
    sed -r -i 's/export\ XDG_CACHE_HOME=\/tmp/\ /g' ~/.bashrc
    source ~/.bashrc
  ;;
  "Ubuntu"|"Debian")
    echo "Distro detected as debian or debian based distro, configuring apt ..."
    # remove docker config which is running terminal command on post install
    # to remove all caches
    if [ ! -f /etc/apt/apt.conf.d/docker-clean ]; then
      echo "restoring docker post install script"
      echo -e "DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };\nAPT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };\nDir::Cache::pkgcache \"\";\nDir::Cache::srcpkgcache \"\";" >> /etc/apt/apt.conf.d/docker-clean
    fi
    
    if [ -f /etc/apt/apt.conf.d/docker-apt-cache ]; then
      # change apt cache directory
      echo "restoring apt cache directory to \"/var/cache/apt\""
      rm /etc/apt/apt.conf.d/docker-apt-cache
    fi  
   ;;
  *)
    echo "distro is unknown, this probably because this script doesn't have this distro registered, considering updating the script."
esac
